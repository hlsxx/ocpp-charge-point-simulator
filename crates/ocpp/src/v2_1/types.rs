use std::str::FromStr;

use anyhow::Result;
use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Debug, Clone, PartialEq)]
pub enum OcppAction {
  Authorize,
  BootNotification,
  CancelReservation,
  CertificateSigned,
  ChangeAvailability,
  ClearCache,
  ClearChargingProfile,
  ClearDisplayMessage,
  ClearedChargingLimit,
  ClearVariableMonitoring,
  CostUpdated,
  CustomerInformation,
  DataTransfer,
  DeleteCertificate,
  FirmwareStatusNotification,
  Get15118EVCertificate,
  GetBaseReport,
  GetCertificateStatus,
  GetChargingProfile,
  GetCompositeSchedule,
  GetDisplayMessage,
  GetInstalledCertificateIds,
  GetLocalListVersion,
  GetLog,
  GetMonitoringReport,
  GetReport,
  GetTransactionStatus,
  GetVariables,
  Heartbeat,
  InstallCertificate,
  LogStatusNotification,
  MeterValues,
  NotifyChargingLimit,
  NotifyCustomerInformation,
  NotifyDisplayMessages,
  NotifyEVChargingNeeds,
  NotifyEVChargingSchedule,
  NotifyEvent,
  NotifyMonitoringReport,
  NotifyReport,
  PublishFirmware,
  PublishFirmwareStatusNotification,
  ReportChargingProfiles,
  RequestStartTransaction,
  RequestStopTransaction,
  ReservationStatusUpdate,
  ReserveNow,
  Reset,
  SecurityEventNotification,
  SendLocalList,
  SetChargingProfile,
  SetDisplayMessage,
  SetMonitoringBase,
  SetMonitoringLevel,
  SetNetworkProfile,
  SetVariableMonitoring,
  SetVariables,
  SignCertificate,
  StatusNotification,
  TransactionEvent,
  TriggerMessage,
  UnlockConnector,
  UnpublishFirmware,
  UpdateFirmware,
  TssRaw,
}

impl std::fmt::Display for OcppAction {
  fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
    write!(f, "{:?}", self)
  }
}

impl FromStr for OcppAction {
  type Err = &'static str;

  fn from_str(input: &str) -> Result<OcppAction, Self::Err> {
    use OcppAction::*;

    match input {
      "Authorize" => Ok(Authorize),
      "BootNotification" => Ok(BootNotification),
      "CancelReservation" => Ok(CancelReservation),
      "CertificateSigned" => Ok(CertificateSigned),
      "ChangeAvailability" => Ok(ChangeAvailability),
      "ClearCache" => Ok(ClearCache),
      "ClearChargingProfile" => Ok(ClearChargingProfile),
      "ClearDisplayMessage" => Ok(ClearDisplayMessage),
      "ClearedChargingLimit" => Ok(ClearedChargingLimit),
      "ClearVariableMonitoring" => Ok(ClearVariableMonitoring),
      "CostUpdated" => Ok(CostUpdated),
      "CustomerInformation" => Ok(CustomerInformation),
      "DataTransfer" => Ok(DataTransfer),
      "DeleteCertificate" => Ok(DeleteCertificate),
      "FirmwareStatusNotification" => Ok(FirmwareStatusNotification),
      "Get15118EVCertificate" => Ok(Get15118EVCertificate),
      "GetBaseReport" => Ok(GetBaseReport),
      "GetCertificateStatus" => Ok(GetCertificateStatus),
      "GetChargingProfile" => Ok(GetChargingProfile),
      "GetCompositeSchedule" => Ok(GetCompositeSchedule),
      "GetDisplayMessage" => Ok(GetDisplayMessage),
      "GetInstalledCertificateIds" => Ok(GetInstalledCertificateIds),
      "GetLocalListVersion" => Ok(GetLocalListVersion),
      "GetLog" => Ok(GetLog),
      "GetMonitoringReport" => Ok(GetMonitoringReport),
      "GetReport" => Ok(GetReport),
      "GetTransactionStatus" => Ok(GetTransactionStatus),
      "GetVariables" => Ok(GetVariables),
      "Heartbeat" => Ok(Heartbeat),
      "InstallCertificate" => Ok(InstallCertificate),
      "LogStatusNotification" => Ok(LogStatusNotification),
      "MeterValues" => Ok(MeterValues),
      "NotifyChargingLimit" => Ok(NotifyChargingLimit),
      "NotifyCustomerInformation" => Ok(NotifyCustomerInformation),
      "NotifyDisplayMessages" => Ok(NotifyDisplayMessages),
      "NotifyEVChargingNeeds" => Ok(NotifyEVChargingNeeds),
      "NotifyEVChargingSchedule" => Ok(NotifyEVChargingSchedule),
      "NotifyEvent" => Ok(NotifyEvent),
      "NotifyMonitoringReport" => Ok(NotifyMonitoringReport),
      "NotifyReport" => Ok(NotifyReport),
      "PublishFirmware" => Ok(PublishFirmware),
      "PublishFirmwareStatusNotification" => Ok(PublishFirmwareStatusNotification),
      "ReportChargingProfiles" => Ok(ReportChargingProfiles),
      "RequestStartTransaction" => Ok(RequestStartTransaction),
      "RequestStopTransaction" => Ok(RequestStopTransaction),
      "ReservationStatusUpdate" => Ok(ReservationStatusUpdate),
      "ReserveNow" => Ok(ReserveNow),
      "Reset" => Ok(Reset),
      "SecurityEventNotification" => Ok(SecurityEventNotification),
      "SendLocalList" => Ok(SendLocalList),
      "SetChargingProfile" => Ok(SetChargingProfile),
      "SetDisplayMessage" => Ok(SetDisplayMessage),
      "SetMonitoringBase" => Ok(SetMonitoringBase),
      "SetMonitoringLevel" => Ok(SetMonitoringLevel),
      "SetNetworkProfile" => Ok(SetNetworkProfile),
      "SetVariableMonitoring" => Ok(SetVariableMonitoring),
      "SetVariables" => Ok(SetVariables),
      "SignCertificate" => Ok(SignCertificate),
      "StatusNotification" => Ok(StatusNotification),
      "TransactionEvent" => Ok(TransactionEvent),
      "TriggerMessage" => Ok(TriggerMessage),
      "UnlockConnector" => Ok(UnlockConnector),
      "UnpublishFirmware" => Ok(UnpublishFirmware),
      "UpdateFirmware" => Ok(UpdateFirmware),
      "TssRaw" => Ok(TssRaw),

      _ => Err("Unknown OCPP v2.0.1 action"),
    }
  }
}
